!function(){function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}window.freeform_notify=function(e){var o,r=$('<div id="export-modal-wrapper" class="modal fitted">');$.ajax({url:Craft.getCpUrl("freeform/notifications/send-notification-dialogue"),dataType:"html",success:function(n){r.html(n),new Garnish.Modal(r),o=r.find("form").get(0),$(".btn.cancel",r).on({click:function(){r.remove(),$(".modal-shade").remove()}}),o.addEventListener("submit",(function(n){n.stopPropagation(),n.preventDefault();var i,a,f,l,s=(i={template:o.template.value,emails:o.emails.value,submissionIds:e},a=Craft.csrfTokenName,f=Craft.csrfTokenValue,l=function(e,o){if("object"!=t(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=t(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(a),(a="symbol"==t(l)?l:String(l))in i?Object.defineProperty(i,a,{value:f,enumerable:!0,configurable:!0,writable:!0}):i[a]=f,i);return $.ajax({url:Craft.getCpUrl("freeform/notifications/send-notification"),type:"post",data:s,success:function(){r.remove(),$(".modal-shade").remove(),Craft.cp.displaySuccess(Craft.t("freeform","Additional notifications sent successfully."))},error:function(t){Craft.cp.displayError(t.responseText)}}),!1}))}})}}();